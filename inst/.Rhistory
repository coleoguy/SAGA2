plot(0,0, col="white", ylim=c(0, .25), xlim=c(0,.4), type="l",
xlab="recombination distance",
ylab="selection coefficient",
main="Male benefit female cost antagonism\nu=0.01  h=0.5", cex.main=.8)
lines(x=x, y=mal.sa, col=colvec[2], pch=16,cex=.5,lwd=lwds)
lines(x=x, y=mal.se, col=colvec[1], pch=16,cex=.5,lwd=lwds)
points(x=c(0,0), y=c(.003,.016), col=c(colvec[1],colvec[2]), pch=15,cex=1)
text(x=c(0,0), y=c(.003,.016), labels=c("X chromosome SE", "Y chromosome SA"), pos=4,cex=.75)
plot(0,0, col="white", ylim=c(0,.25), xlim=c(0,.4), type="l",
xlab="recombination distance",
ylab="selection coefficient",
main="Female benefit male cost antagonism\nu=0.01  h=0.5", cex.main=.8)
lines(x=x, y=fem.sa, col=colvec[3], pch=16,cex=.5,lwd=lwds)
lines(x=x, y=fem.se, col=colvec[4], pch=16,cex=.5,lwd=lwds)
points(x=c(0,0), y=c(.003,.016), col=c(colvec[3],colvec[4]), pch=15,cex=1)
text(x=c(0,0), y=c(.003,.016), labels=c("X chromosome SA", "Y chromosome SE"), pos=4,cex=.75)
#   load  equi.state.RData                         #
############################################################
library(viridis)
s <- round(as.numeric(row.names(results[[1]])), digits=2)[round(seq.int(from=1,to=200, length.out=6))]
r <- round(as.numeric(colnames(results[[1]])), digits=2)[round(seq.int(from=1,to=200, length.out=6))]
a <- seq.int(from=0,to=1, length.out=6)
s <- c("0.00", "0.05","0.10","0.15","0.20","0.25")
# calculate some genotype frequencies
XAYa <- 2*results[[6]] * results[[1]]
XaYA <- 2*results[[5]] * results[[2]]
colnames(XAYa) <- colnames(results[[1]])
rownames(XAYa) <- rownames(results[[1]])
XAYa.L <- XAYa
# calculate the frequency of these genotypes being lost to recombination
for(i in 1:ncol(XAYa)){
XAYa[,i] <- XAYa[,i] * as.numeric(colnames(results[[1]]))[i]
XaYA[,i] <- XaYA[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(XAYa-XaYA),axes=F, main="Male benefit female cost anatagonism\nfitness loss to recombination", col = viridis(500),
xlab="recombination distance", ylab="selection coefficient", cex.main=.8)
axis(side=1,labels=r, at=a)
axis(side=2,labels=s, at=a)
lwds=3
par(mfrow=c(1,3))
plot(0,0, col="white", ylim=c(0, .25), xlim=c(0,.4), type="l",
xlab="recombination distance",
ylab="selection coefficient",
main="Male benefit female cost antagonism\nu=0.01  h=0.5", cex.main=.8)
lines(x=x, y=mal.sa, col=colvec[2], pch=16,cex=.5,lwd=lwds)
lines(x=x, y=mal.se, col=colvec[1], pch=16,cex=.5,lwd=lwds)
points(x=c(0,0), y=c(.003,.016), col=c(colvec[1],colvec[2]), pch=15,cex=1)
text(x=c(0,0), y=c(.003,.016), labels=c("X chromosome SE", "Y chromosome SA"), pos=4,cex=.75)
plot(0,0, col="white", ylim=c(0,.25), xlim=c(0,.4), type="l",
xlab="recombination distance",
ylab="selection coefficient",
main="Female benefit male cost antagonism\nu=0.01  h=0.5", cex.main=.8)
lines(x=x, y=fem.sa, col=colvec[3], pch=16,cex=.5,lwd=lwds)
lines(x=x, y=fem.se, col=colvec[4], pch=16,cex=.5,lwd=lwds)
points(x=c(0,0), y=c(.003,.016), col=c(colvec[3],colvec[4]), pch=15,cex=1)
text(x=c(0,0), y=c(.003,.016), labels=c("X chromosome SA", "Y chromosome SE"), pos=4,cex=.75)
#   load  equi.state.RData                         #
############################################################
library(viridis)
s <- round(as.numeric(row.names(results[[1]])), digits=2)[round(seq.int(from=1,to=200, length.out=6))]
r <- round(as.numeric(colnames(results[[1]])), digits=2)[round(seq.int(from=1,to=200, length.out=6))]
a <- seq.int(from=0,to=1, length.out=6)
s <- c("0.00", "0.05","0.10","0.15","0.20","0.25")
# calculate some genotype frequencies
XAYa <- 2*results[[6]] * results[[1]]
XaYA <- 2*results[[5]] * results[[2]]
colnames(XAYa) <- colnames(results[[1]])
rownames(XAYa) <- rownames(results[[1]])
XAYa.L <- XAYa
# calculate the frequency of these genotypes being lost to recombination
for(i in 1:ncol(XAYa)){
XAYa[,i] <- XAYa[,i] * as.numeric(colnames(results[[1]]))[i]
XaYA[,i] <- XaYA[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(XAYa-XaYA),axes=F, main="Male benefit female cost anatagonism\nfitness loss to recombination", col = viridis(500),
xlab="recombination distance", ylab="selection coefficient", cex.main=.8)
axis(side=1,labels=r, at=a)
axis(side=2,labels=s, at=a)
lwds=3
par(mfrow=c(1,3))
plot(0,0, col="white", ylim=c(0, .25), xlim=c(0,.4), type="l",
xlab="recombination distance",
ylab="selection coefficient",
main="Male benefit female cost antagonism\nu=0.01  h=0.5", cex.main=.9)
lines(x=x, y=mal.sa, col=colvec[2], pch=16,cex=.5,lwd=lwds)
lines(x=x, y=mal.se, col=colvec[1], pch=16,cex=.5,lwd=lwds)
points(x=c(0,0), y=c(.003,.016), col=c(colvec[1],colvec[2]), pch=15,cex=1)
text(x=c(0,0), y=c(.003,.016), labels=c("X chromosome SE", "Y chromosome SA"), pos=4,cex=.75)
plot(0,0, col="white", ylim=c(0,.25), xlim=c(0,.4), type="l",
xlab="recombination distance",
ylab="selection coefficient",
main="Female benefit male cost antagonism\nu=0.01  h=0.5", cex.main=.9)
lines(x=x, y=fem.sa, col=colvec[3], pch=16,cex=.5,lwd=lwds)
lines(x=x, y=fem.se, col=colvec[4], pch=16,cex=.5,lwd=lwds)
points(x=c(0,0), y=c(.003,.016), col=c(colvec[3],colvec[4]), pch=15,cex=1)
text(x=c(0,0), y=c(.003,.016), labels=c("X chromosome SA", "Y chromosome SE"), pos=4,cex=.75)
#   load  equi.state.RData                         #
############################################################
library(viridis)
s <- round(as.numeric(row.names(results[[1]])), digits=2)[round(seq.int(from=1,to=200, length.out=6))]
r <- round(as.numeric(colnames(results[[1]])), digits=2)[round(seq.int(from=1,to=200, length.out=6))]
a <- seq.int(from=0,to=1, length.out=6)
s <- c("0.00", "0.05","0.10","0.15","0.20","0.25")
# calculate some genotype frequencies
XAYa <- 2*results[[6]] * results[[1]]
XaYA <- 2*results[[5]] * results[[2]]
colnames(XAYa) <- colnames(results[[1]])
rownames(XAYa) <- rownames(results[[1]])
XAYa.L <- XAYa
# calculate the frequency of these genotypes being lost to recombination
for(i in 1:ncol(XAYa)){
XAYa[,i] <- XAYa[,i] * as.numeric(colnames(results[[1]]))[i]
XaYA[,i] <- XaYA[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(XAYa-XaYA),axes=F, main="Male benefit female cost anatagonism\nfitness loss to recombination", col = viridis(500),
xlab="recombination distance", ylab="selection coefficient", cex.main=.9)
axis(side=1,labels=r, at=a)
axis(side=2,labels=s, at=a)
load("~/Desktop/Dropbox/projects/fragileY/scripts/data.files/equi.state.SR.RData")
library(viridis)
s <- round(as.numeric(row.names(results[[1]])), digits=2)[round(seq.int(from=1,to=200, length.out=6))]
r <- round(as.numeric(colnames(results[[1]])), digits=2)[round(seq.int(from=1,to=200, length.out=6))]
a <- seq.int(from=0,to=1, length.out=6)
s <- c("0.00", "0.05","0.10","0.15","0.20","0.25")
# calculate some genotype frequencies
XAYa <- 2*results[[6]] * results[[1]]
XaYA <- 2*results[[5]] * results[[2]]
colnames(XAYa) <- colnames(results[[1]])
rownames(XAYa) <- rownames(results[[1]])
XAYa.L <- XAYa
# calculate the frequency of these genotypes being lost to recombination
for(i in 1:ncol(XAYa)){
XAYa[,i] <- XAYa[,i] * as.numeric(colnames(results[[1]]))[i]
XaYA[,i] <- XaYA[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(XAYa-XaYA),axes=F, main="Male benefit female cost anatagonism\nfitness loss to recombination", col = viridis(500),
xlab="recombination distance", ylab="selection coefficient", cex.main=.9)
axis(side=1,labels=r, at=a)
axis(side=2,labels=s, at=a)
foo <- XAYa-XaYA
foo <- unlist(foo)
hist(foo)
max(foo)
max(foo)
round(max(foo), digits=3)
plot(0,0,xlim=c(0,10),ylim=0,100)
plot(0,0,xlim=c(0,10),ylim=c(0,100))
plot(0,0,xlim=c(0,10),ylim=c(0,100))
for(i in 1:100){
points(x=5,y=i, pch="-")
}
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2)
}
plot(0,0,xlim=c(0,10),ylim=c(0,100))
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5)
}
plot(0,0,xlim=c(0,10),ylim=c(0,100))
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,100))
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,150))
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,200))
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
lines(x=c(5,5.2),y=c(1,1)
)
lines(x=c(5,5.5),y=c(1,1))
lines(x=c(5,5.5),y=c(1,1))
lines(x=c(5,5.5),y=c(25,25))
lines(x=c(5,5.5),y=c(50,50))
lines(x=c(5,5.5),y=c(75,75))
lines(x=c(5,5.5),y=c(100,100))
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,200))
lines(x=c(5,5.5),y=c(1,1))
lines(x=c(5,5.5),y=c(25,25))
lines(x=c(5,5.5),y=c(50,50))
lines(x=c(5,5.5),y=c(75,75))
lines(x=c(5,5.5),y=c(100,100))
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,200))
lines(x=c(5,5.4),y=c(1,1))
lines(x=c(5,5.4),y=c(25,25))
lines(x=c(5,5.4),y=c(50,50))
lines(x=c(5,5.4),y=c(75,75))
lines(x=c(5,5.4),y=c(100,100))
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,200))
lines(x=c(5,5.34),y=c(1,1))
lines(x=c(5,5.34),y=c(25,25))
lines(x=c(5,5.34),y=c(50,50))
lines(x=c(5,5.34),y=c(75,75))
lines(x=c(5,5.34),y=c(100,100))
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,200))
lines(x=c(5,5.54),y=c(1,1))
lines(x=c(5,5.64),y=c(25,25))
lines(x=c(5,5.74),y=c(50,50))
lines(x=c(5,5.44),y=c(75,75))
lines(x=c(5,5.34),y=c(100,100))
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
.025/2
1.25/2
1.25+1.25/2
text(x=5.54,y=1, pos=4, label="0.000")
text(x=5.54,y=25, pos=4, label="0.63")
text(x=5.54,y=50, pos=4, label="1.25")
text(x=5.54,y=75, pos=4, label="1.88")
text(x=5.54,y=100, pos=4, label="2.50")
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,200))
lines(x=c(5,5.54),y=c(1,1))
lines(x=c(5,5.54),y=c(25,25))
lines(x=c(5,5.54),y=c(50,50))
lines(x=c(5,5.54),y=c(75,75))
lines(x=c(5,5.54),y=c(100,100))
text(x=5.54,y=1, pos=4, label="0.00")
text(x=5.54,y=25, pos=4, label="0.63")
text(x=5.54,y=50, pos=4, label="1.25")
text(x=5.54,y=75, pos=4, label="1.88")
text(x=5.54,y=100, pos=4, label="2.50")
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,200))
lines(x=c(5,5.54),y=c(1,1))
lines(x=c(5,5.54),y=c(50,50))
lines(x=c(5,5.54),y=c(100,100))
text(x=5.54,y=1, pos=4, label="0.00")
text(x=5.54,y=50, pos=4, label="1.25")
text(x=5.54,y=100, pos=4, label="2.50")
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
text(x=5,y=105, pos=3, "% reduction in \nfavored genotypes")
par(mfcol=c(1,3))
plot(0,0,xlim=c(0,10),ylim=c(0,200))
lines(x=c(5,5.54),y=c(1,1))
#lines(x=c(5,5.54),y=c(50,50))
lines(x=c(5,5.54),y=c(100,100))
text(x=5.54,y=1, pos=4, label="0.00")
text(x=5.54,y=50, pos=4, label="1.25")
text(x=5.54,y=100, pos=4, label="2.50")
text(x=5,y=105, pos=3, "% reduction in \nfavored genotypes")
for(i in 1:100){
points(x=5,y=i, pch="-", cex=2.5, col=viridis(100)[i])
}
install.packages(c("colorspace", "curl", "evaluate", "mnormt", "openssl", "proto", "R.oo", "RandomFields", "RandomFieldsUtils", "reshape2", "rmarkdown", "rsconnect", "survival"))
plot(cars)
library(devtools)
install_github('coleoguy/chromePlus')
library(chromePlus)
install_github('coleoguy/chromePlus')
install_github('coleoguy/chromePlus')
library(chromePlus)
library("chromevolR", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("chromTrait", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:chromTrait", unload=TRUE)
detach("package:chromevolR", unload=TRUE)
remove.packages(chromevolR)
remove.packages("chromevolR")
remove.packages("chromeTrait")
remove.packages("chromTrait")
load("~/Desktop/Dropbox/projects/fragileY/scripts/data.files/equi.state.SR2.RData")
names(results)
results[[3]]results[[6]]
results[[3]] * results[[6]]
results[[4]] * results[[5]]
names(results)
names(results)
XAYa <- results[[3]] * results[[6]]
XaYA <- results[[4]] * results[[5]]
test <- XAya-D
names(results)
XAYa <- results[[3]] * results[[6]]
XaYA <- results[[4]] * results[[5]]
test <- XAYa-D
image(t(XAYa))
image(t(XAYa-D))
image(t(XaYA-D))
image(results[[1]]-results[[5]])
results[[1]]-results[[5]]
foo <- results[[1]]-results[[5]]
image(foo)
image(t(foo))
colnames(results[[1]])
foo <- results[[1]]-results[[5]]
for(i in 1:ncol(foo)){
foo[,i] <- foo[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(foo))
names(results)
names(results)
XA <- results[[1]]
YA <- results[[5]]
for(i in 1:ncol(XAYa)){
XA[,i] <- XA[,i] * as.numeric(colnames(results[[1]]))[i]
YA[,i] <- YA[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(foo))
names(results)
XA <- results[[1]]
YA <- results[[5]]
for(i in 1:ncol(XAYa)){
XA[,i] <- XA[,i] * as.numeric(colnames(results[[1]]))[i]
YA[,i] <- YA[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(foo))
image(t(XA-YA))
names(results)
XA <- results[[1]]
YA <- results[[5]]
names(results)
XA <- results[[1]]
YA <- results[[5]]
for(i in 1:ncol(XA)){
XA[,i] <- XA[,i] * as.numeric(colnames(results[[1]]))[i]
YA[,i] <- YA[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(XA-YA))
names(results)
XA <- results[[1]]
YA <- results[[5]]
for(i in 1:ncol(XA)){
XA[,i] <- XA[,i] * as.numeric(colnames(results[[1]]))[i]
YA[,i] <- YA[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(XA-YA))
XAYa <- 2*results[[6]] * results[[1]]
XaYA <- 2*results[[5]] * results[[2]]
colnames(XAYa) <- colnames(results[[1]])
rownames(XAYa) <- rownames(results[[1]])
XAYa.L <- XAYa
for(i in 1:ncol(XAYa)){
XAYa[,i] <- XAYa[,i] * as.numeric(colnames(results[[1]]))[i]
XaYA[,i] <- XaYA[,i] * as.numeric(colnames(results[[1]]))[i]
}
pa <- results[[4]] + results[[6]]
par(mfcol=c(1,2))
image(t(XAYa-XaYA),axes=F, main="Probability of inversion invasion", col = viridis(500),
xlab="recombination distance", ylab="selection coefficient")
library(viridis)
par(mfcol=c(1,2))
image(t(XAYa-XaYA),axes=F, main="Probability of inversion invasion", col = viridis(500),
xlab="recombination distance", ylab="selection coefficient")
image(t(XA-YA), col = viridis(500))
as.numeric(colnames(results[[1]]))
load("~/Desktop/Dropbox/projects/fragileY/scripts/data.files/equi.state.SR2.RData")
names(results)
XA <- results[[1]]
YA <- results[[5]]
for(i in 1:ncol(XA)){
XA[,i] <- XA[,i] * as.numeric(colnames(results[[1]]))[i]
YA[,i] <- YA[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(XA-YA), col = viridis(500))
z <- XA-YA
names(results)
XA <- results[[1]]
YA <- results[[5]]
z <- XA-YA
for(i in 1:ncol(XA)){
z[,i] <- z[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(z), col = viridis(500))
names(results)
XA <- results[[1]]
YA <- results[[5]]
z <- XA-2*YA
for(i in 1:ncol(XA)){
z[,i] <- z[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(z), col = viridis(500))
load("~/Desktop/Dropbox/projects/fragileY/scripts/data.files/equi.state.SR2.RData")
names(results)
XA <- results[[1]]
YA <- results[[5]]
Z <- XA-2*YA
for(i in 1:ncol(XA)){
Z[,i] <- Z[,i] * as.numeric(colnames(results[[1]]))[i]
}
image(t(Z), col = viridis(500))
plot(0,0,ylim=c(0,35))
plot(0,0,ylim=c(0,35), col="white", xlim=c(0,1))
for(i in 1:35){
lines(x=c(0,1), y=i,i)
}
plot(0,0,ylim=c(0,35), col="white", xlim=c(0,1))
for(i in 1:35){
lines(x=c(0,1), y=c(i,i))
}
plot(0,0,ylim=c(0,35), col="white", xlim=c(0,1), xaxs = "i", yaxs = "i")
for(i in 1:35){
lines(x=c(0,1), y=c(i,i))
}
s-1-s
s <- 1:100/100
s-1-s
.75-1-.75
1-.75
.75-.25
shiny::runApp('Desktop/Elections2')
runApp('Desktop/Elections2')
runApp('Desktop/Elections2')
runApp('Desktop/Elections2')
runApp('Desktop/Elections2')
10^-2
load("/Users/hblackmo/Desktop/Dropbox/projects/SAGA2/data/lca.data.rda")
names(lca.data)
library(devtools)
install_github('coleoguy/SAGA2')
library(SAGA2)
setwd("~/Desktop/Dropbox/gitrepos/r-packages/SAGA2/inst")
obs.dat <- read.csv("sex.csv",as.is=T)
layout(matrix(c(1,1,2,2,3),1,5))
plot(x=rep(1:3,each=2), y=obs.dat[1:6,3], ylab="phenotype", xaxt="n",xlab="" ,ylim=c(0,20),main="observed",col=rep(c("red","blue"),times=3),pch=16,cex=2)
axis(side=1,at=c(1,2,3),labels=c("P1","F1","P2"))
plot(x=rep(1:3,each=2), y=obs.dat[8:13,3], ylab="phenotype", xaxt="n",xlab="" ,ylim=c(0,20),main="observed",col=rep(c("red","blue"),times=3),pch=16,cex=2)
axis(side=1,at=c(1,2,3),labels=c("P1","F1","P2"))
plot(x=c(0,1), y=c(0,1), ylab="", xaxt="n",yaxt="n",xlab="", frame=F,col='white')
points(x=c(0,0), y=c(1,.9), col=c("blue","red"), pch=16,cex=2)
text(x=c(0,0), y=c(1,.9), labels=c("male","female"),pos=4)
setwd("~/Desktop/Dropbox/gitrepos/r-packages/SAGA2/inst")
obs.dat <- as.data.frame(data.matrix(read.csv("sex.csv",as.is=T)[c(1:6), c(2:4)]))
obs.dat <- obs.dat
result <- AnalyzeCrossesMM(data=obs.dat, Cmatrix="esd", pheno=2, se=3, env.factor=F, model.sum=.90, even.sex=T)
plot(result, min.vi = .5)
obs.dat <- as.data.frame(data.matrix(read.csv("sex.csv",as.is=T)[c(8:17), c(2:4)]))
obs.dat <- obs.dat
result <- AnalyzeCrossesMM(data=obs.dat, Cmatrix="XY", pheno=2, se=3, env.factor=F, model.sum=.90, even.sex=T, max.pars=3)
plot(result, min.vi = .5)
result <- AnalyzeCrossesMM(data=obs.dat, Cmatrix="esd", pheno=2, se=3, env.factor=F, model.sum=.90, even.sex=T, max.pars=3)
plot(result, min.vi = .5)
setwd("~/Desktop/Dropbox/gitrepos/r-packages/SAGA2/inst")
obs.dat <- read.csv("sex.csv",as.is=T)
layout(matrix(c(1,1,2,2,3),1,5))
plot(x=rep(1:3,each=2), y=obs.dat[1:6,3], ylab="phenotype", xaxt="n",xlab="" ,ylim=c(0,20),main="observed",col=rep(c("red","blue"),times=3),pch=16,cex=2)
axis(side=1,at=c(1,2,3),labels=c("P1","F1","P2"))
obs.dat <- read.csv("sex.csv",as.is=T)
View(obs.dat)
obs.dat <- read.csv("sex.csv",as.is=T)
layout(matrix(c(1,1,2,2,3),1,5))
plot(x=rep(1:3,each=2), y=obs.dat[1:6,3], ylab="phenotype", xaxt="n",xlab="" ,ylim=c(0,20),main="observed",col=rep(c("red","blue"),times=3),pch=16,cex=2)
axis(side=1,at=c(1,2,3),labels=c("P1","F1","P2"))
plot(x=rep(1:3,each=2), y=obs.dat[8:17,3], ylab="phenotype", xaxt="n",xlab="" ,ylim=c(0,20),main="observed",col=rep(c("red","blue"),times=3),pch=16,cex=2)
plot(x=rep(1:5,each=2), y=obs.dat[8:17,3], ylab="phenotype", xaxt="n",xlab="" ,ylim=c(0,20),main="observed",col=rep(c("red","blue"),times=3),pch=16,cex=2)
axis(side=1,at=c(1,2,3,4,5),labels=c("P1","BC1", "F1", "BC2", "P2"))
plot(x=c(0,1), y=c(0,1), ylab="", xaxt="n",yaxt="n",xlab="", frame=F,col='white')
points(x=c(0,0), y=c(1,.9), col=c("blue","red"), pch=16,cex=2)
text(x=c(0,0), y=c(1,.9), labels=c("male","female"),pos=4)
setwd("~/Desktop/Dropbox/gitrepos/r-packages/SAGA2/inst")
obs.dat <- as.data.frame(data.matrix(read.csv("sex.csv",as.is=T)[c(1:6), c(2:4)]))
obs.dat <- obs.dat
result <- AnalyzeCrossesMM(data=obs.dat, Cmatrix="esd", pheno=2, se=3, env.factor=F, model.sum=.90, even.sex=T)
plot(result, min.vi = .5)
obs.dat <- as.data.frame(data.matrix(read.csv("sex.csv",as.is=T)[c(8:17), c(2:4)]))
obs.dat <- obs.dat
result <- AnalyzeCrossesMM(data=obs.dat, Cmatrix="esd", pheno=2, se=3, env.factor=F, model.sum=.90, even.sex=T, max.pars=3)
plot(result, min.vi = .5)
setwd("~/Desktop/Dropbox/gitrepos/r-packages/SAGA2/inst")
obs.dat <- read.csv("sex.csv",as.is=T)
layout(matrix(c(1,1,2,2,3),1,5))
plot(x=rep(1:3,each=2), y=obs.dat[1:6,3], ylab="phenotype", xaxt="n",xlab="" ,ylim=c(0,20),main="observed",col=rep(c("red","blue"),times=3),pch=16,cex=2)
axis(side=1,at=c(1,2,3),labels=c("P1","F1","P2"))
plot(x=rep(1:5,each=2), y=obs.dat[8:17,3], ylab="phenotype", xaxt="n",xlab="" ,ylim=c(0,20),main="observed",col=rep(c("red","blue"),times=3),pch=16,cex=2)
axis(side=1,at=c(1,2,3,4,5),labels=c("P1","BC1", "F1", "BC2", "P2"))
plot(x=c(0,1), y=c(0,1), ylab="", xaxt="n",yaxt="n",xlab="", frame=F,col='white')
points(x=c(0,0), y=c(1,.9), col=c("blue","red"), pch=16,cex=2)
text(x=c(0,0), y=c(1,.9), labels=c("male","female"),pos=4)
setwd("~/Desktop/Dropbox/gitrepos/r-packages/SAGA2/inst")
obs.dat <- as.data.frame(data.matrix(read.csv("sex.csv",as.is=T)[c(1:6), c(2:4)]))
obs.dat <- obs.dat
result <- AnalyzeCrossesMM(data=obs.dat, Cmatrix="esd", pheno=2, se=3, env.factor=F, model.sum=.90, even.sex=T)
plot(result, min.vi = .5)
obs.dat <- as.data.frame(data.matrix(read.csv("sex.csv",as.is=T)[c(8:17), c(2:4)]))
obs.dat <- obs.dat
result <- AnalyzeCrossesMM(data=obs.dat, Cmatrix="esd", pheno=2, se=3, env.factor=F, model.sum=.90, even.sex=T, max.pars=3)
plot(result, min.vi = .5)
setwd("~/Desktop/Dropbox/gitrepos/r-packages/SAGA2/inst")
obs.dat <- as.data.frame(data.matrix(read.csv("sex.csv",as.is=T)[c(1:6), c(2:4)]))
obs.dat <- obs.dat
result <- AnalyzeCrossesMM(data=obs.dat, Cmatrix="esd", pheno=2, se=3, env.factor=F, model.sum=.90, even.sex=T)
plot(result, min.vi = .5)
obs.dat <- as.data.frame(data.matrix(read.csv("sex.csv",as.is=T)[c(8:17), c(2:4)]))
obs.dat <- obs.dat
result <- AnalyzeCrossesMM(data=obs.dat, Cmatrix="esd", pheno=2, se=3, env.factor=F, model.sum=.90, even.sex=T, max.pars=3)
plot(result, min.vi = .5)
